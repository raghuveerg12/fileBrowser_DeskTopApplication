package com.desktop.app.filebrowser.main;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.UIManager;
import javax.swing.WindowConstants;

import org.hibernate.Query;
import org.hibernate.Session;

import com.desktop.app.filebrowser.bean.SaveImageAsBean;
import com.desktop.app.filebrowser.bean.UserRegistrationBean;
import com.desktop.app.filebrowser.helper.StoreFileAsJson;
import com.desktop.app.filebrowser.utils.HibernateUtil;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



/**
 *
 * @author raghu
 */
public class LoginForm extends JFrame {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private static final  Logger LOGGER = Logger.getLogger(LoginForm.class.getName());
	private static final String FONT_TYPE = "Tahoma";
	/**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
        this.setLocationRelativeTo(null);// center form in the screen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
    	  JButton jButton1;
    	     JButton jButton2;
    	     JLabel jLabel2;
    	     JLabel jLabel4;
    	     JLabel jLabel5;
    	     JLabel jLabelClose;
    	     JLabel jLabelMin;
    	     JLabel jLabelRegister;
    	     JPanel jPanel1;
    	     JPanel jPanel2;

        jPanel1 = new JPanel();
        jLabelClose = new JLabel();
        jLabel2 = new JLabel();
        jLabelMin = new JLabel();
        jPanel2 = new JPanel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jTextField1 = new JTextField();
        jPasswordField1 = new JPasswordField();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jLabelRegister = new JLabel();
        

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new Color(248, 148, 6));

        jLabelClose.setFont(new Font(FONT_TYPE, 1, 24)); // NOI18N
        jLabelClose.setForeground(new Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new MouseAdapter() {
        	@Override
            public void mouseClicked(MouseEvent evt) {
        		 System.exit(0);
            }
        });

        jLabel2.setFont(new Font(FONT_TYPE, 1, 24)); // NOI18N
        jLabel2.setForeground(new Color(255, 255, 255));
        jLabel2.setText("Login Form");

        jLabelMin.setFont(new Font(FONT_TYPE, 1, 24)); // NOI18N
        jLabelMin.setForeground(new Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new MouseAdapter() {
        	@Override
            public void mouseClicked(MouseEvent evt) {
        		 setState(JFrame.ICONIFIED);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMin)
                .addGap(18, 18, 18)
                .addComponent(jLabelClose)
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(jLabel2)
                    .addContainerGap(236, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMin, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabelClose))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel2.setBackground(new Color(153, 153, 153));

        jLabel4.setFont(new Font(FONT_TYPE, 0, 18)); // NOI18N
        jLabel4.setForeground(new Color(0, 0, 0));
        jLabel4.setText("Username:");

        jLabel5.setFont(new Font(FONT_TYPE, 0, 18)); // NOI18N
        jLabel5.setForeground(new Color(0, 0, 0));
        jLabel5.setText("Password:");

        jTextField1.setBackground(new Color(255, 255, 255));
        jTextField1.setFont(new Font(FONT_TYPE, 0, 14)); // NOI18N
        jTextField1.setForeground(new Color(0, 0, 0));
        jPasswordField1.setBackground(new Color(255, 255, 255));
        jPasswordField1.setFont(new Font(FONT_TYPE, 0, 14)); // NOI18N
        jPasswordField1.setForeground(new Color(0, 0, 0));

        jButton1.setBackground(new Color(34, 167, 240));
        jButton1.setFont(new Font(FONT_TYPE, 1, 14)); // NOI18N
        jButton1.setForeground(new Color(255, 255, 255));
        jButton1.setText("Login");
        jButton1.addMouseListener(new MouseAdapter() {
        	@Override
            public void mouseClicked(MouseEvent evt) {
            	jLabelLoginMouseClick();
            }
        });

        jButton2.setBackground(new Color(242, 38, 19));
        jButton2.setFont(new Font(FONT_TYPE, 1, 14)); // NOI18N
        jButton2.setForeground(new Color(255, 255, 255));
        jButton2.setText("Reset");
        jButton2.addMouseListener(new MouseAdapter() {
        	@Override
            public void mouseClicked(MouseEvent evt) {
        		ResetPassword rgf = new ResetPassword();
           	 	rgf.setIconImages(getImages());
                rgf.setVisible(true);
                rgf.pack();
                rgf.setLocationRelativeTo(null);
                rgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
               dispose();		
            }
        });

        jLabelRegister.setFont(new Font(FONT_TYPE, 0, 14)); // NOI18N
        jLabelRegister.setForeground(new Color(255, 255, 255));
        jLabelRegister.setText("click here to create a new account");
        jLabelRegister.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabelRegister.addMouseListener(new MouseAdapter() {
        	@Override
            public void mouseClicked(MouseEvent evt) {
        		 RegisterForm rgf = new RegisterForm();
        	        rgf.setVisible(true);
        	        rgf.setIconImages(getImages());
        	        rgf.pack();
        	        rgf.setLocationRelativeTo(null);
        	        rgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        	       dispose();
            }
        });
        
         rememberMe = new JCheckBox("Remeberme");
        rememberMe.setBackground(new Color(153, 153, 153));

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2Layout.setHorizontalGroup(
        	jPanel2Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel2Layout.createSequentialGroup()
        			.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel2Layout.createSequentialGroup()
        					.addGap(107)
        					.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(jPanel2Layout.createSequentialGroup()
        							.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
        							.addGap(26)
        							.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE))
        						.addComponent(jLabelRegister)))
        				.addGroup(jPanel2Layout.createSequentialGroup()
        					.addGap(61)
        					.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(jPanel2Layout.createSequentialGroup()
        							.addGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE)
        								.addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 92, GroupLayout.PREFERRED_SIZE))
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING, false)
        								.addComponent(jPasswordField1)
        								.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 188, GroupLayout.PREFERRED_SIZE)))
        						.addComponent(rememberMe))))
        			.addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
        	jPanel2Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel2Layout.createSequentialGroup()
        			.addGap(54)
        			.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel4)
        				.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jPasswordField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel5))
        			.addGap(15)
        			.addComponent(rememberMe)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addComponent(jLabelRegister)
        			.addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2.setLayout(jPanel2Layout);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }

	private void jLabelLoginMouseClick() {
    	
    	if(checkUserIsValid()){
	    	JFrame f = new JFrame(FileBrowser.APP_TITLE);
	    	FileBrowser fileBrowser = new FileBrowser();
	 		f.setContentPane(fileBrowser.getGui(jTextField1.getText()));
	 		f.setVisible(true); 		
	 		f.setIconImages(getIconImages());
	 		f.pack();
	 		f.setMinimumSize(f.getSize());
	 		f.setVisible(true);
	        f.setLocationRelativeTo(null);
	        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);      
	 		fileBrowser.showRootFile();
	 		dispose();

    	}
	}

	@SuppressWarnings("deprecation")
	private boolean checkUserIsValid() {
	   UserRegistrationBean userRegbean=new UserRegistrationBean();

		  Object[] options = { "OK" };
		 
		if( StoreFileAsJson.validateUserLogin(jTextField1.getText(),jPasswordField1.getText())){
			if(rememberMe.isSelected()){
				userRegbean.setRememberMe("YES");
				userRegbean.setFirstName(jTextField1.getText());
				

				try {
					String rem="Remember";
					StoreFileAsJson.storeUserRemMeDetails(userRegbean, rem);
				} catch (IOException e) {
					LOGGER.info(e.getMessage());
				}
			}else{
				userRegbean.setRememberMe("NO");
				userRegbean.setFirstName(jTextField1.getText());
				

				try {
					String rem="Remember";
					StoreFileAsJson.storeUserRemMeDetails(userRegbean, rem);
				} catch (IOException e) {
					LOGGER.info(e.getMessage());
				}
				
			}
			
			
			return true;
		}else{
			int choice= JOptionPane.showOptionDialog(null, 
  			      "Entered user and password are not correct \n please click reset password \n Please register  ", 
  			      "Message", 
  			      JOptionPane.CLOSED_OPTION, 
  			      JOptionPane.QUESTION_MESSAGE, 
  			      null, options, null);
		  	  if (choice == JOptionPane.CLOSED_OPTION)
		        {
		          System.exit(0);
		        }
			return false;

		}
	}

	
	

   

    /**
     * @param args the command line arguments
     */
    public static void main(String []args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException
				| IllegalAccessException
				| javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(RegisterForm.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
            	
            	if(checkRememberMe()==null){
                
	                LoginForm lf=new LoginForm();
	                lf.setVisible(true);
	                lf.setIconImages(getImages());
            	}else{
            		JFrame f = new JFrame(FileBrowser.APP_TITLE);
                	FileBrowser fileBrowser = new FileBrowser();
             		f.setContentPane(fileBrowser.getGui(checkRememberMe()));
             		f.setVisible(true);
             		f.setIconImages(getImages());
             		f.pack();
             		f.setMinimumSize(f.getSize());
             		f.setVisible(true);
                    f.setLocationRelativeTo(null);
                    f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                    fileBrowser.showRootFile();
             		
            	}
            }
        });
    }

    static String checkRememberMe() {
    	
    	 String path = System.getProperty("user.dir");

		try ( FileInputStream fileIn = new FileInputStream(path+File.separatorChar+"Remember.ser");
	            ObjectInputStream in = new ObjectInputStream(fileIn);){
			
			
			UserRegistrationBean staff=(UserRegistrationBean)	in.readObject();
		    LOGGER.info(path);		
			
			LOGGER.info("rememberMe :"+staff.getRememberMe());

			if(staff.getRememberMe().equals("YES")){
	    		return staff.getFirstName();
	    	}
			
		} catch (IOException | ClassNotFoundException e) {
			e.getMessage();
			return null;
		}
    	

    	
		return null;
	}
    
    @SuppressWarnings("unchecked")
	static List<Image> getImages(){
    	List<Image> images = new ArrayList<>();
    	Session session=HibernateUtil.getSessionFactory().openSession();
    	try {
    		session.beginTransaction();
			Query query=session.createQuery("from SaveImageAsBean");
    		List<SaveImageAsBean> li = query.list();
    		if(!li.isEmpty()){
    			for (SaveImageAsBean saveImageAsBean : li) {
    				       

    				images.add(ImageIO.read(new ByteArrayInputStream(saveImageAsBean.getImageOne())));
    				images.add(ImageIO.read(new ByteArrayInputStream(saveImageAsBean.getImageTwo())));
    				
				}
    		}
    		
			
			
		} catch (Exception weTried) {
			weTried.getStackTrace();
			weTried.printStackTrace();
			return Collections.emptyList();
		}
		return images;
    }
    
 


   
    private JPasswordField jPasswordField1;
    private  JTextField jTextField1;
    private JCheckBox rememberMe;
}

